{"version":3,"sources":["../src/global_tracer_delegate.js"],"names":[],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;;;;;AAEA,IAAM,aAAa,sBAAnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACqB,oB;;;;;;;;;;;qCAEG;AAChB,gBAAM,SAAS,yCAAqB,UAApC;AACA,mBAAO,OAAO,UAAP,yBAAP;AACH;;;qCAEmB;AAChB,gBAAM,SAAS,yCAAqB,UAApC;AACA,mBAAO,OAAO,UAAP,yBAAP;AACH;;;kCAEgB;AACb,gBAAM,SAAS,yCAAqB,UAApC;AACA,mBAAO,OAAO,OAAP,yBAAP;AACH;;;mCAEiB;AACd,gBAAM,SAAS,yCAAqB,UAApC;AACA,mBAAO,OAAO,QAAP,yBAAP;AACH;;;iCAEe;AACZ,gBAAM,SAAS,yCAAqB,UAApC;AACA,mBAAO,OAAO,MAAP,yBAAP;AACH;;;;;;kBAzBgB,oB","file":"global_tracer_delegate.js","sourcesContent":["import { getGlobalTracer } from './global_tracer';\nimport Tracer from './tracer';\n\nconst noopTracer = new Tracer();\n\n// Allows direct importing/requiring of the global tracer:\n//\n// let globalTracer = require('opentracing/global');\n//      OR\n// import globalTracer from 'opentracing/global';\n//\n// Acts a bridge to the global tracer that can be safely called before the\n// global tracer is initialized. The purpose of the delegation is to avoid the\n// sometimes nearly intractible initialization order problems that can arise in\n// applications with a complex set of dependencies.\nexport default class GlobalTracerDelegate extends Tracer {\n\n    _startSpan(...args) {\n        const tracer = getGlobalTracer() || noopTracer;\n        return tracer._startSpan(...args);\n    }\n\n    _reference(...args) {\n        const tracer = getGlobalTracer() || noopTracer;\n        return tracer._reference(...args);\n    }\n\n    _inject(...args) {\n        const tracer = getGlobalTracer() || noopTracer;\n        return tracer._inject(...args);\n    }\n\n    _extract(...args) {\n        const tracer = getGlobalTracer() || noopTracer;\n        return tracer._extract(...args);\n    }\n\n    _flush(...args) {\n        const tracer = getGlobalTracer() || noopTracer;\n        return tracer._flush(...args);\n    }\n}\n"]}